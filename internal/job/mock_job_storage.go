// Code generated by mockery v2.9.4. DO NOT EDIT.

package job

import mock "github.com/stretchr/testify/mock"

// MockJobStorage is an autogenerated mock type for the JobStorage type
type MockJobStorage struct {
	mock.Mock
}

// DeleteByName provides a mock function with given fields: name
func (_m *MockJobStorage) DeleteByName(name string) error {
	ret := _m.Called(name)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(name)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAll provides a mock function with given fields:
func (_m *MockJobStorage) GetAll() ([]Job, error) {
	ret := _m.Called()

	var r0 []Job
	if rf, ok := ret.Get(0).(func() []Job); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]Job)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByName provides a mock function with given fields: name
func (_m *MockJobStorage) GetByName(name string) (*Job, error) {
	ret := _m.Called(name)

	var r0 *Job
	if rf, ok := ret.Get(0).(func(string) *Job); ok {
		r0 = rf(name)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*Job)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Store provides a mock function with given fields: job
func (_m *MockJobStorage) Store(job *Job) error {
	ret := _m.Called(job)

	var r0 error
	if rf, ok := ret.Get(0).(func(*Job) error); ok {
		r0 = rf(job)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
